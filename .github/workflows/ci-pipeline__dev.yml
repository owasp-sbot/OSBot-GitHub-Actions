name       : CI Pipeline - DEV
on:
  push:
    branches:
      - dev

env:
  BRANCH            : 'dev'
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN   : ${{ secrets.DOCKERHUB_TOKEN }}
  PACKAGE_NAME      : 'osbot_github_actions'
  DOCKER_HUB_ACCOUNT: 'diniscruz'
  DOCKER_CONTEXT    : "default"
  DOCKER_FILE       : './deploy/docker/osbot_github_actions__from_pip/Dockerfile'

jobs:

#  run-unit-tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Poetry - Install Dependencies
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/poetry__install@dev
#        with:
#          pip_install: '-r requirements-test.txt'
#
#      - name: Run Unit Tests (using Poetry)
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/poetry__run-unit-tests@dev
#        with:
#          package_name: 'osbot_github_actions'
#
#  increment-tag:
#    name: Increment Tag - DEV
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Increment Tag (for DEV)
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/github__increment-tag@dev
#        with:
#          package_name : 'osbot_github_actions'
#          target_branch: ${{ env.BRANCH }}
#          release_type : 'minor'
#    needs:
#      - run-unit-tests


  publish-to-docker-hub:
    runs-on: ubuntu-latest

    steps:
      - name: Publish to Docker Hub
        uses: actions/checkout@v4

      - name: "Pull origin (to get latest value of the project's version)"
        shell: bash
        run: |
          git fetch --no-tags origin ${{ env.BRANCH }}
          git reset --hard FETCH_HEAD

      - name: Read version from file
        id: get_version
        run: echo "IMAGE_TAG=$(cat ./${{env.PACKAGE_NAME}}/version)" >> $GITHUB_ENV

      - name: Deploy to Docker Hub
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/docker-hub__publish@dev
        with:
          DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN    : ${{ secrets.DOCKERHUB_TOKEN    }}
          IMAGE_NAME         : "${{env.DOCKER_HUB_ACCOUNT}}/${{env.PACKAGE_NAME}}"
          IMAGE_TAG          : ${{ env.IMAGE_TAG }}
          DOCKER_CONTEXT     : '.'
          DOCKER_FILE        : "./deploy/docker/osbot_github_actions__from_pip/Dockerfile"

          #DOCKER_FILE        : "./deploy/docker/cbr-website-beta__using-pip/Dockerfile"


#  publish-to-docker-hub:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Publish to Docker Hub
#        uses: actions/checkout@v4
#
##      - name: "Pull origin (to get latest value of the project's version)"
##        shell: bash
##        run: |
##          git fetch --no-tags origin ${{ github.ref }}
##          git reset --hard FETCH_HEAD
#
#      - name: Update Branch
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/git__update_branch@dev
#        with:
#          branch: ${{ env.BRANCH }}
#
#      - name: Read version from file
#        id: get_version
#        run: |
#          echo "IMAGE_TAG=$(cat ./osbot_github_actions/version)" >> $GITHUB_ENV
#          echo "$IMAGE_TAG"
#          pwd
#          ls -la
#          ls -la ./deploy
#          ls -la ./deploy/docker
#          ls -la ./deploy/docker/osbot_github_actions__from_pip
#
#      - name: Publish to dockerHub
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/docker-hub__publish@dev
#        with:
#          DOCKERHUB_USERNAME: "${{ env.DOCKERHUB_USERNAME }}"
#          DOCKERHUB_TOKEN   : "${{ env.DOCKERHUB_TOKEN    }}"
#          IMAGE_NAME        : "${{ env.DOCKER_HUB_ACCOUNT }}/${{ env.PACKAGE_NAME }}"
#          IMAGE_TAG         : "${{ env.IMAGE_TAG          }}"
#          DOCKER_CONTEXT    : "${{ env.DOCKER_CONTEXT     }}"
#          DOCKER_FILE       : "${{ env.DOCKER_FILE        }}"


#    needs:
#      - publish-to-pypi